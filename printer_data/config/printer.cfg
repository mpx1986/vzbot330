[respond]
[include mainsail.cfg]
[include config/fan.cfg]
[include config/stepper.cfg]
[include macros/macro.cfg]
[include K-ShakeTune/*.cfg]

[force_move]
enable_force_move: True


[exclude_object]
[pause_resume]
recover_velocity: 100
[respond]   #activate message
[gcode_arcs]  #activate round corner
resolution: 0.1

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 10.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 10.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 10.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 0.50   ; the value to retract while PAUSE
variable_cancel_retract   : 0.80   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 0.80   ; the value to unretract while RESUME
variable_speed_unretract  : 35.0  ; unretract speed in mm/s
variable_speed_hop        : 15.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 10  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 10  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
variable_runout_sensor    : "filament_motion_sensor encoder_sensor"    ; If a sensor is defined, it will be used to cancel the execution of RESUME in case no filament is detected.
##                                   Specify the config name of the runout sensor e.g "filament_switch_sensor runout". Hint use the same as in your printer.cfg
## !!! Custom macros, please use with care and review the section of the corresponding macro.
## These macros are for simple operations like setting a status LED. Please make sure your macro does not interfere with the basic macro functions.
## Only  single line commands are supported, please create a macro if you need more than one command.
#variable_user_pause_macro : ""    ; Everything insight the "" will be executed after the klipper base pause (PAUSE_BASE) function
#variable_user_resume_macro: ""    ; Everything insight the "" will be executed before the klipper base resume (RESUME_BASE) function
#variable_user_cancel_macro: ""    ; Everything insight the "" will be executed before the klipper base cancel (CANCEL_PRINT_BASE) function
gcode:

########################
########################
# Printer
########################

[printer]
kinematics: corexy
max_velocity: 300
max_accel: 35000
minimum_cruise_ratio: 0.5
max_z_accel: 50
max_z_velocity: 20
square_corner_velocity: 7

[mcu]
canbus_uuid: 494fe1b63264


[mcu host]
serial: /tmp/klipper_host_mcu

[temperature_sensor Octopus]
sensor_type: temperature_mcu
max_temp: 100

[temperature_sensor PI]
sensor_type: temperature_host
min_temp: 10
max_temp: 100 

[mcu EBBCan]
canbus_uuid: cd88c816729d
canbus_interface: can0

[mcu scanner]
canbus_uuid: 7dd159b0a935  

########################
########################
# EXTRUDER
########################

#[firmware_retraction]
#retract_speed: 40
#retract_length: 0.7
#unretract_extra_length: 0
#unretract_speed: 40

[extruder]                          
step_pin: EBBCan: PD0
dir_pin: EBBCan: PD1
enable_pin: !EBBCan: PD2
microsteps: 16                     
full_steps_per_rotation: 200

rotation_distance: 35.8    # 10t
gear_ratio: 60:10          # 10t

rotation_distance: 35.8    # 8t
gear_ratio: 60:8          # 8t

nozzle_diameter: 0.400              
filament_diameter: 1.75             
heater_pin: EBBCan: PB13          
sensor_type: PT1000                 
sensor_pin: EBBCan: PA3       
min_temp: 0                     
max_temp: 450                      
max_power: 1.0                      
min_extrude_temp: 170               
pressure_advance: 0.025             
pressure_advance_smooth_time: 0.040 
max_extrude_only_distance: 500.0   
max_extrude_cross_section: 250

control: pid 
pid_kp: 18.295             
pid_ki: 0.678             
pid_kd: 123.484
step_pulse_duration: 0.000004   


[tmc2209 extruder]
uart_pin: EBBCan: PA15
run_current: 0.86
stealthchop_threshold: 999999

########################
########################
# HEIZBED
########################

[heater_bed]
heater_pin: PA1
sensor_type: Generic 3950
sensor_pin: PF3
control: pid
pid_Kp: 66.746
pid_Ki: 3.504
pid_Kd: 317.878
min_temp: 0
max_temp: 120
max_power: 0.7


########################
########################
## LED
########################

#[neopixel bed_rgb]
#pin: PB10 

########################
########################
### Probe
########################

[scanner]
mcu: scanner            
#   Offsets are measured from the centre of your coil, to the tip of your nozzle 
#   on a level axis. It is vital that this is accurate. 
x_offset: 0                          
#    adjust for your cartographers offset from nozzle to middle of coil
y_offset: 23                         
#    adjust for your cartographers offset from nozzle to middle of coil

#scanner_touch_threshold: 800 #800ht Ideal 
calibration_method: touch
sensor: cartographer
sensor_alt: carto
mesh_runs: 2
#    Number of passes to make during mesh scan.

[adxl345]
cs_pin: scanner:PA3
spi_bus: spi1

[resonance_tester]
accel_chip: adxl345
probe_points:
    155, 155, 20

########################
########################
### Mesh
########################
[bed_mesh]
speed: 300
horizontal_move_z: 5
mesh_min: 10, 31
mesh_max: 310, 260
mesh_pps: 0,0
move_check_distance: 3
probe_count: 50,50
algorithm: bicubic
zero_reference_position: 155.00,150.00

########################
########################
### Motor Sync
########################
[motors_sync]
axes: x,y
#    Axes on which calibration will be performed.
accel_chip: adxl345
#    Accelerometers for vibration collection: adxl345 / mpu9250 / lis2dw,
#    etc. Are indicated general or for axis on which calibration is
#    performed, for example - accel_chip_x or accel_chip_y.
#microsteps: 16
#    Maximum microstepping displacement of the stepper motor rotor. It's
#    not necessary to increase the value above 16 with 20t pulley, these
#    fluctuations are elusive.
#model: linear
#    Model of the dependence of the displacement of microsteps on the
#    shaft of a stepper motor depends on the magnitude of the measured
#    oscillations. Are indicated general or for axis. Supported models:
#    linear, quadratic, power, root, hyperbolic, exponential.
#model_coeffs: 20000, 0
#    Coefficients above the described model, for calculating microsteps.
#    Are indicated general or for axis.
#max_step_size: 5
#    The maximum number of microsteps that the motor can take move at time,
#    to achieve the planned magnitude.
#retry_tolerance: 0
#    The forced threshold to which a pair of stepper motors on one belt
#    will have to lower the magnitude of the oscillations. It's recommended
#    to configure in order to filter possible inaccuracies. After several
#    iterations of starting synchronization, you will find the edge, to
#    which this parameter should be omitted.
#retries: 0
#    Maximum number of repetitions to achieve a forced threshold of motor
#    synchronization deviations.


###################################

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*#